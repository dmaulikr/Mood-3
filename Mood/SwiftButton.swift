//
//  SwiftButton.swift
//  Moon
//
//  Created by Tung CHENG on 15/9/23.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class SwiftButton : UIButton {

    public override func drawRect(rect: CGRect) {
        super.drawRect(rect)
        
        SwiftButton.drawSwiftButton(rect)
    }
    //// Drawing Methods

    public class func drawSwiftButton(frame: CGRect) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let baseColor = UIColor(red: 0.254, green: 0.254, blue: 0.254, alpha: 1.000)
        var baseColorRedComponent: CGFloat = 1,
            baseColorGreenComponent: CGFloat = 1,
            baseColorBlueComponent: CGFloat = 1
        baseColor.getRed(&baseColorRedComponent, green: &baseColorGreenComponent, blue: &baseColorBlueComponent, alpha: nil)

        let backgroundColor = UIColor(red: (baseColorRedComponent * 0 + 1), green: (baseColorGreenComponent * 0 + 1), blue: (baseColorBlueComponent * 0 + 1), alpha: (CGColorGetAlpha(baseColor.CGColor) * 0 + 1))

        //// Button Drawing
        let buttonPath = UIBezierPath(roundedRect: CGRectMake(frame.minX + 3, frame.minY + 3, frame.width - 6, frame.height - 6), cornerRadius: 4)
        backgroundColor.setFill()
        buttonPath.fill()
        baseColor.setStroke()
        buttonPath.lineWidth = 1.5
        buttonPath.stroke()


        //// Text Drawing
        let textRect = CGRectMake(frame.minX + 8, frame.minY + 8, frame.width - 15, frame.height - 15)
        let textTextContent = NSString(string: "再来一次")
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Center

        let textFontAttributes = [NSFontAttributeName: UIFont.systemFontOfSize(14), NSForegroundColorAttributeName: UIColor.blackColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

}
